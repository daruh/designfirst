openapi: 3.0.3
info: 
  title: API
  version: v1
servers: 
  - url: reviews 
paths: 
  /reviews:
    get:
      summary: summary
      description: Get bunch of reviews
      parameters: 
        - name: maxRating
          in:  query
          schema:
            type: number
      responses: 
        '200':
          description: a bunch of reviews
          content: 
            application/json:
               schema: 
                 type: array
                 items: 
                   type: object
                   properties: 
                    rating:
                      type: integer
                      minimum: 1
                      maximum: 5
                    message:
                      type: string
                    uuid:
                      type: string
                      pattern: '^[0-9a-fA-F\-]{36}$'
                    userId:
                      type: string
                      pattern: '^[0-9a-fA-F\-]{36}$'
                      nullable: true
    post:
      security: 
        -  bearerAuth: [scope.a]
      description: Create a new Review
      requestBody: 
        content: 
          application/json:
            schema: 
              type: object
              properties: 
                message:
                  type: string
                  example: An awesome time for the whole family.
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  example: 5
      responses:
        '201':
          description:  Successfully created a new Review
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  message: 
                    type: string
                    example: An awesome time for the whole family.
                  rating:
                    type: integer
                    minimum: 1
                    maximum: 5
                    example: 5
                  userId:
                    type: string
                    nullable: true
                    pattern: '[a-zA-Z-.0-9]{36}'
                    example: f7f680a8-d111-421f-b6b3-493ebf905078
                  uuid:
                    type: string
                    pattern: '[a-zA-Z-.0-9]{36}'
                    example: f7f680a8-d111-421f-b6b3-493ebf905078
  /reviews/{reviewId}:
    get:
      parameters: 
      - in: path
        name: reviewId
        required: true
        schema: 
          type: string
          description: The review's ID
          example: 3b5b1707-b82c-4b1d-9078-157053902525
      responses: 
        '200':
          description: Review response object
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                    rating:
                      type: integer
                      minimum: 1
                      maximum: 5
                    message:
                      type: string
                    uuid:
                      type: string
                      pattern: '^[0-9a-fA-F\-]{36}$'
                    userId:
                      type: string
                      pattern: '^[0-9a-fA-F\-]{36}$'
                      nullable: true        
components: 
  securitySchemes: 
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  